#! /bin/bash

### START -------

$HOME/.config/polybar/forest/launch.sh &

pgrep -x sxhkd > /dev/null | sxhkd &

nitrogen --restore &

dunst -config $HOME/.config/dunst/dunstrc_nord &

picom &

#bluetooth applet
blueman-applet &

nm-applet & 
# remove cursor "x"
xsetroot -cursor_name left_ptr &

#greenclip copy history
killall -q greenclip
greenclip daemon &


monitor_remove() {
	# Add default temp desktop because a minimum of one desktop is required per monitor
	bspc monitor "$EXTERNAL_MONITOR" -a Desktop

  # Move all desktops except the last default desktop to internal monitor
  for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR");	do
	  bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
  done

  # delete default desktops
  bspc desktop Desktop --remove

  # reorder desktops
  bspc monitor "$INTERNAL_MONITOR" -o 1 2 3 4 5 6 7 8 9
}


EXTERNAL_MONITOR=$(xrandr --listactivemonitors | awk 'NR==3{print $4}')
INTERNAL_MONITOR=$(xrandr --listactivemonitors | awk 'NR==2{print $4}')
#INTERNAL_MONITOR="HDMI-1"
#EXTERNAL_MONITOR="eDP-1"
#INTERNAL_MONITOR="eDP-1"
#EXTERNAL_MONITOR="HDMI-1"

if [[ $(xrandr --listactivemonitors | grep "${EXTERNAL_MONITOR}") ]]; then
	bspc wm -O ${INTERNAL_MONITOR} ${EXTERNAL_MONITOR} 
	bspc monitor ${INTERNAL_MONITOR} -d 1 2 3 4 5
	bspc monitor ${EXTERNAL_MONITOR} -d 6 7 8 9
else
	bspc wm -O ${INTERNAL_MONITOR} 
	bspc monitor ${INTERNAL_MONITOR} -d  1 2 3 4 5 6 7 8 9
	monitor_remove
fi


bspc config border_width         2
bspc config window_gap          12

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config focused_border_color "#E84F4F"

#bspc rule -a *:chrome desktop='^2'
#bspc rule -a google-chrome-unstable private=on dekstop=2
#bspc rule -a google-chrome-stable private=on dekstop=2
#bspc rule -a google-chrome-dev private=on dekstop=2
#bspc rule -a Gimp desktop='^8' state=floating follow=on
#bspc rule -a mplayer2 state=floating
#bspc rule -a Kupfer.py focus=on
#bspc rule -a Screenka manage=off
